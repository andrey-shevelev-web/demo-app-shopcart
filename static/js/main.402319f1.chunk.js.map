{"version":3,"sources":["components/err-indicator/err_icon.png","components/header/index.js","components/header/header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/store-service-context/store-service-context.js","components/hoc/with-store-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/err-indicator/index.js","components/err-indicator/err-indicator.js","components/book-list/book-list.js","components/book-list/index.js","utils/compose.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/err-boundry/index.js","components/err-boundry/err-boundry.js","services/store-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["module","exports","Header","connect","shoppingCart","orderTotal","count","orderCount","total","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","StoreServiceProvider","Provider","StoreServiceConsumer","Consumer","withStoreService","Wrapped","props","storeService","bookAddedToCart","bookID","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","Spinner","class","ErrIndicator","errIcon","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","funcs","comp","reduceRight","wrapped","f","compose","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","CartTable","items","cartItems","item","idx","App","role","numItems","path","component","HomePage","exact","CartPage","ErrBoundry","state","hasError","setState","children","StoreService","_apiBase","url","fetch","res","ok","Error","status","json","getResource","console","log","action","undefined","updateOrder","quantity","find","itemIndex","findIndex","ordItems","slice","updateCartItems","updateCartItem","aggData","reduce","a","b","reducer","updateBookList","updateShoppingCart","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.402319f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/err_icon.beb951d6.png\";","import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './header.css';\r\n\r\nconst Header = ({ count, total }) => {\r\n  return (\r\n    <header className=\"header row\">\r\n      <Link to=\"/\" className=\"logo-link\">\r\n        <div className=\"logo\">BookShop</div>\r\n      </Link>\r\n      <Link to=\"/cart\" className=\"cart-link\">\r\n        <div className=\"shopping-cart\">\r\n          <i className=\"cart-icon fa fa-shopping-cart\" />\r\n          ({count}): Р.{total}\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ( { shoppingCart: { orderTotal, orderCount }} ) => {\r\n  return {\r\n    count: orderCount,\r\n    total: orderTotal\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\nimport './book-list-item.css';\r\n\r\nexport default ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book;\r\n\r\n  return (\r\n    <div className=\"book-list-item\">\r\n      <div className=\"book-cover\">\r\n        <img src={coverImage} alt=\"cover\" />\r\n      </div>\r\n      <div className=\"book-details\">\r\n        <span className=\"book-title\">{title}</span>\r\n        <div className=\"book-author\">{author}</div>\r\n        <div className=\"book-price\">Р.{price}</div>\r\n        <button onClick={onAddedToCart}\r\n          className=\"btn btn-info add-to-cart\">\r\n          Добавить в корзину\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nconst {\r\n  Provider: StoreServiceProvider,\r\n  Consumer: StoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  StoreServiceProvider,\r\n  StoreServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { StoreServiceConsumer } from '../store-service-context';\r\n\r\nconst withStoreService = () => (Wrapped) => {\r\n\r\n  return (props) => {\r\n    return (\r\n      <StoreServiceConsumer>\r\n        { \r\n          (storeService) => {\r\n            return (\r\n              <Wrapped {...props} storeService={storeService}/>\r\n            );\r\n          }\r\n        }\r\n      </StoreServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStoreService;\r\n","const booksRequested = () => {\r\n  return {\r\n    type: 'FETCH_BOOKS_REQUEST'\r\n  }\r\n}\r\n\r\nconst booksLoaded = (newBooks) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_SUCCESS',\r\n    payload: newBooks\r\n  }\r\n}\r\n\r\nconst booksError = (error) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_FAILURE',\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport const bookAddedToCart = (bookID) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookID\r\n  }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookID) => {\r\n  return {\r\n    type: 'BOOK_REMOVED_FROM_CART',\r\n    payload: bookID\r\n  }\r\n}\r\n\r\nexport const bookRemovedAllFromCart = (bookID) => {\r\n  return {\r\n    type: 'BOOK_REMOVED_ALL_FROM_CART',\r\n    payload: bookID\r\n  }\r\n}\r\n\r\nconst fetchBooks = (storeService, dispatch) => () => {\r\n  dispatch(booksRequested());\r\n  storeService.getBooks()\r\n    .then((data) => dispatch(booksLoaded(data)))\r\n    .catch((err) => dispatch(booksError(err)));\r\n}\r\n\r\nexport {\r\n  fetchBooks\r\n}\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"loadingio-spinner-ellipsis-foudbyoba6k\">\r\n      <div class=\"ldio-zftdreg872f\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrIndicator from './err-indicator'\r\n\r\nexport default ErrIndicator;\r\n","import React from 'react';\r\n\r\nimport './err-indicator.css';\r\nimport errIcon from './err_icon.png';\r\n\r\nconst ErrIndicator = () => {\r\n  return (\r\n    <div className=\"err-indicator\">\r\n      <img src={errIcon} alt=\"Error icon\" />\r\n      <span className=\"boom\">Ошибка!</span>\r\n      <span>Мы прилагаем все усилия чтобы исправить.</span>\r\n      <span>Приносим Вам извинения!</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrIndicator;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\nimport Spinner from '../spinner';\r\nimport ErrIndicator from '../err-indicator';\r\nimport './book-list.css';\r\nimport BookListItem from '../book-list-item';\r\n\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return (\r\n    <ul className=\"book-list\">\r\n      {\r\n        books.map((book) => {\r\n          return <li key={book.id}>\r\n            <BookListItem book={book} onAddedToCart={() => onAddedToCart(book.id)} />\r\n          </li>\r\n        })\r\n      }\r\n    </ul>\r\n  );  \r\n}\r\n\r\nclass BookListContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n    if (loading) {\r\n      return <Spinner />\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrIndicator />\r\n    }\r\n\r\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( { bookList: { books, loading, error }} ) => {\r\n  return { books, loading, error };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { storeService }) => {\r\n  return {\r\n    fetchBooks: fetchBooks(storeService, dispatch),\r\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  withStoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookListItem from '../book-list-item';\r\nimport BookList from './book-list';\r\n\r\nexport default BookList;\r\n","export default (...funcs) => (comp) => {\r\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { bookAddedToCart, bookRemovedFromCart, bookRemovedAllFromCart } from '../../actions';\r\nimport './cart-table.css';\r\n\r\nconst CartTable = ({ items, total, count, onIncrease, onDecrease, onDelete }) => {\r\n  \r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    \r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>Р.{total}</td>\r\n        <td>\r\n          <button \r\n            onClick={() => onDelete(id)}\r\n            className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onIncrease(id)}\r\n            className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onDecrease(id)}\r\n            className=\"btn btn-outline-warning btn-sm float-right\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"cart-table\">\r\n      <h2>Ваш заказ</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>Товар</th>\r\n            <th>Количество</th>\r\n            <th>Цена</th>\r\n            <th>Операции</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { items.map(renderRow) }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Итого ({count}): Р.{total}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ( { shoppingCart: { cartItems, orderTotal, orderCount }} ) => {\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal,\r\n    count: orderCount\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: bookRemovedAllFromCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);\r\n","import CartTable from './cart-table';\r\n\r\nexport default CartTable;\r\n","import React from 'react';\r\n\r\nimport BookList from '../book-list';\r\nimport CartTable from '../cart-table';\r\n\r\nexport default () => {\r\n  return (\r\n    <div> \r\n      <BookList />\r\n      <CartTable />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport CartTable from '../cart-table';\r\n\r\nexport default () => {\r\n  return (\r\n    <div> \r\n      <CartTable />\r\n    </div>\r\n  );\r\n}\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from '../header';\r\nimport { HomePage, CartPage } from '../pages';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main role=\"main\" className=\"container\">\r\n      <Header numItems={5} total={210}/>\r\n      <Switch>\r\n        <Route \r\n          path=\"/\"\r\n          component={HomePage}\r\n          exact\r\n        />\r\n\r\n        <Route \r\n          path=\"/cart\"\r\n          component={CartPage}\r\n        />\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;","import ErrBoundry from './err-boundry';\r\n\r\nexport default ErrBoundry;\r\n","import React, { Component } from 'react';\r\n\r\nimport ErrIndicator from '../err-indicator';\r\n\r\nexport default class ErrBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrIndicator />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","export default class StoreService {\r\n\r\n  _apiBase = 'https://protected-falls-88472.herokuapp.com/api';\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }    \r\n    return await res.json();\r\n  }\r\n\r\n  async getBooks() {\r\n    const res = await this.getResource('/books/');\r\n    console.log(res);\r\n    return res.data;\r\n  }  \r\n}","export default (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null        \r\n    };\r\n  };\r\n\r\n  switch(action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    default:\r\n      return state.bookList;\r\n  }\r\n}\r\n","const updateCartItem = (book, item = {}, quantity) => {\r\n  const {\r\n    id = book.id,\r\n    title = book.title,\r\n    count = 0,\r\n    total = 0 } = item;\r\n\r\n  return {\r\n    id: id,\r\n    title: title,\r\n    count: count + quantity,\r\n    total: total + quantity*book.price\r\n  }\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n  \r\n  if (item.count === 0) {\r\n    return [\r\n      ...cartItems.slice(0, idx),\r\n      ...cartItems.slice(idx + 1)\r\n    ];    \r\n  }\r\n\r\n  if (idx === -1) {\r\n    return [...cartItems, item];\r\n  }\r\n\r\n  return [\r\n    ...cartItems.slice(0, idx),\r\n    item,\r\n    ...cartItems.slice(idx + 1)\r\n  ];\r\n}\r\n\r\nconst updateOrder = (state, bookID, quantity) => {\r\n  const { bookList: { books }, shoppingCart: { cartItems} } = state;\r\n\r\n  const book = books.find(({ id }) => id === bookID);\r\n  const item = cartItems.find(({ id }) => id === bookID);\r\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookID);\r\n  const newItem = updateCartItem(book, item, quantity);\r\n\r\n  const ordItems = updateCartItems(cartItems, newItem, itemIndex);\r\n  const aggData = [] = ordItems.reduce(([a, b], {total, count}) => [a + total, b + count], [0, 0]);\r\n  const [orderTotal, orderCount] = aggData;\r\n\r\n  return {\r\n    cartItems: ordItems,\r\n    orderTotal,\r\n    orderCount\r\n  };\r\n}\r\n\r\nexport default (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0,\r\n      orderCount: 0\r\n    };\r\n  };\r\n\r\n  switch(action.type) {\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, action.payload, 1);\r\n    \r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, action.payload, -1);\r\n\r\n    case 'BOOK_REMOVED_ALL_FROM_CART':\r\n      const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\r\n      return updateOrder(state, action.payload, -item.count);\r\n    \r\n    default:\r\n      return state.shoppingCart;\r\n  }\r\n}\r\n","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    bookList: updateBookList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action)\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrBoundry from './components/err-boundry';\r\nimport StoreService from './services/store-service';\r\nimport { StoreServiceProvider } from './components/store-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst storeService = new StoreService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrBoundry>\r\n      <StoreServiceProvider value={storeService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </StoreServiceProvider>\r\n    </ErrBoundry>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}